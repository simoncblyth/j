Bootstrap: localimage
From: cuda_12.2.2-devel-ubuntu22.04.sif

%post
    # Make apt-get non-interactive
    export DEBIAN_FRONTEND=noninteractive
    
    # Update package list
    apt-get update
    # Install all packages in one apt-get command
    apt-get install -y bash git curl tar zip unzip python3 python3-pip \
        freeglut3 \
        freeglut3-dev \
        libxmu-dev \
        libxi-dev \
        libglew-dev \
        libglfw3-dev \
        build-essential \
	libxinerama-dev \
	libxcursor-dev \
	libx11-6 \
        x11-apps \
	vim  \
	gdb \
	gdbserver \
	libc6-dbg \
	libstdc++6-10-dbg \
	libssl3 \
	file libxpm-dev libxpm4 \
	libxft-dev libxft2 \
	liblzma-dev \
	xz-utils \
	libfreetype6 \
	libfreetype6-dev \
	pkg-config \
	libxml2-dev \
    	uuid-dev \
    	libjson-c-dev \
    	libssl-dev \
    	zlib1g-dev \
	libpng-dev \
	libjpeg-dev \
	libtiff-dev \
	libgif-dev \
	libfreetype6-dev \
	libfontconfig1-dev \
	libafterimage-dev \
	binutils cmake dpkg-dev g++ gcc libssl-dev libx11-dev \
	libxext-dev libxft-dev libxpm-dev python3 libtbb-dev libgif-dev \
	gfortran libpcre3-dev \
	libglu1-mesa-dev libglew-dev libftgl-dev \
	libfftw3-dev libcfitsio-dev libgraphviz-dev \
	libavahi-compat-libdnssd-dev libldap2-dev \
 	python3-dev python3-numpy libxml2-dev libkrb5-dev \
	libgsl-dev qtwebengine5-dev nlohmann-json3-dev libmysqlclient-dev \
	libgl2ps-dev \
	liblzma-dev libxxhash-dev liblz4-dev libzstd-dev \
	libicu-dev \
	python-is-python3 \
	llvm llvm-dev clang \
	libxerces-c-dev \

    # Verify OpenGL installation
    glxinfo | grep "OpenGL version" || true
    
    # Show installed libraries
    #dpkg -l | grep -E 'glut|glew|glfw|boost'
    # Download and extract ICU 73
    cd /tmp
    curl -O -L https://github.com/unicode-org/icu/releases/download/release-73-2/icu4c-73_2-src.tgz
    tar -xzf icu4c-73_2-src.tgz
    cd icu/source

    # Configure, compile, and install ICU 73
    ./configure --prefix=/usr/local
    make -j$(nproc)
    make install

    # Clean up
    rm -rf /tmp/icu*

%environment
    # Set environment variables for ICU 73
    export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    export LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
    export C_INCLUDE_PATH=/usr/local/include:$C_INCLUDE_PATH
%environment
    export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
%post
    apt-get update && apt-get install -y locales
    locale-gen en_US en_US.UTF-8 en_GB en_GB.UTF-8
    update-locale LANG=en_US.UTF-8 LC_ALL=en_US LC_ALL=en_US.UTF-8 LC_ALL=en_GB LC_ALL=en_GB.UTF-8
%post
    echo "Installing dependencies..."
    apt update && apt install -y wget g++ libxrandr2 libxcursor1 libxi6 libglu1-mesa

%environment
    export LANG=en_US.UTF-8
    export LC_ALL=en_US.UTF-8
    export LANGUAGE=en_US.UTF-8

%post
    # Create installation directories
    mkdir -p /opt/geant4/build
    mkdir -p /opt/geant4/install
    # Download and install Geant4
    cd /opt/geant4
    wget https://gitlab.cern.ch/geant4/geant4/-/archive/v10.7.4/geant4-v10.7.4.tar.gz    
    tar xzf geant4-v10.7.4.tar.gz
    cd build

   # Configure and build Geant4
    cmake ../geant4-v10.7.4 \
        -DCMAKE_INSTALL_PREFIX=/opt/geant4/install \
        -DGEANT4_INSTALL_DATA=ON \
        -DGEANT4_USE_GDML=ON \
        -DGEANT4_USE_SYSTEM_EXPAT=ON \
        -DGEANT4_BUILD_MULTITHREADED=ON

    # Build and install
    make -j$(nproc)
    make install

    # Cleanup
    cd /opt/geant4
    rm -rf build geant4-v10.7.4.tar.gz
    rm -f /root/*.pkg.tar*
    rm -f /root/*.tar.gz 

%environment
    export PATH="/opt/geant4/install/bin:${PATH}"
    export G4INSTALL="/opt/geant4/install"
    export G4EXAMPLES="/opt/geant4/install/share/Geant4/examples"
    export G4NEUTRONHPDATA="/opt/geant4/install/share/Geant4/data/G4NDL4.6"
    export G4LEDATA="/opt/geant4/install/share/Geant4/data/G4EMLOW7.13"
    export G4LEVELGAMMADATA="/opt/geant4/install/share/Geant4/data/PhotonEvaporation5.7"
    export G4RADIOACTIVEDATA="/opt/geant4/install/share/Geant4/data/RadioactiveDecay5.6"
    export G4PARTICLEXSDATA="/opt/geant4/install/share/Geant4/data/G4PARTICLEXS3.1.1"
    export G4PIIDATA="/opt/geant4/install/share/Geant4/data/G4PII1.3"
    export G4REALSURFACEDATA="/opt/geant4/install/share/Geant4/data/RealSurface2.2"
    export G4SAIDXSDATA="/opt/geant4/install/share/Geant4/data/G4SAIDDATA2.0"
    export G4ABLADATA="/opt/geant4/install/share/Geant4/data/G4ABLA3.1"
    export G4INCLDATA="/opt/geant4/install/share/Geant4/data/G4INCL1.0"
    export G4ENSDFSTATEDATA="/opt/geant4/install/share/Geant4/data/G4ENSDFSTATE2.3"

%post
    # Create installation directories
    mkdir -p /opt/clhep/build
    mkdir -p /opt/clhep/install
    # Download and install clhep 
    cd /opt/clhep
    wget https://gitlab.cern.ch/CLHEP/CLHEP/-/archive/CLHEP_2_4_4_0/CLHEP-CLHEP_2_4_4_0.tar.gz
    tar xzf CLHEP-CLHEP_2_4_4_0.tar.gz
    cd build

   # Configure and build Geant4
    cmake ../CLHEP-CLHEP_2_4_4_0 \
        -DCMAKE_INSTALL_PREFIX=/opt/clhep/install \

    # Build and install
    make -j$(nproc)
    make install

    # Cleanup
    cd /opt/clhep
    rm -rf build CLHEP-CLHEP_2_4_4_0.tar.gz 
    rm -f /root/*.pkg.tar*
    rm -f /root/*.tar.gz 
%post
    # Create installation directories
    mkdir -p /opt/root/build
    mkdir -p /opt/root/install
    # Download and install clhep 
    cd /opt/root
    # cd  to the diretory where you want to install root
    git clone --branch latest-stable https://github.com/root-project/root.git root_src
    cd build
    
    cmake  -DCMAKE_CXX_STANDARD=17 -DCMAKE_INSTALL_PREFIX=../install  -Droot7=ON   -Dxrootd=OFF ../root_src/ 
    # Build and install
    make -j$(nproc)
    make install

    # Cleanup
    cd /opt/root
    rm -rf build root_src 
    rm -f /root/*.pkg.tar*
    rm -f /root/*.tar.gz 
%environment
    source /opt/root/install/bin/thisroot.sh
 
%runscript
    exec /bin/bash "$@"
